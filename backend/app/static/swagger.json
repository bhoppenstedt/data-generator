{
  "openapi": "3.0.0",
  "info": {
    "description": "Datastream Generator as a web application for generating different datastreams.",
    "version": "1.0.0",
    "title": "Datastream Generator"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Signal Request",
      "description": "Example for requesting, creating and deleting signals with parameters"
    }
  ],
  "paths": {
    "/api/signals/": {
      "get": {
        "tags": [
          "Signals Request"
        ],
        "summary": "Returns all created signals in Python Dictionary",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/random/{signalname}/": {
      "put": {
        "summary": "create a new random signal",
        "tags": [
          "Signals Request"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "signalname",
            "required": true,
            "in": "path",
            "description": "Signal name for random signal",
            "lowerBoundary": 0,
            "upperBoundary": 0,
            "transmissionFrequency": 0.0,
            "schema": {
              "$ref": "#/components/schemas/RandomSignal"
            }
          }
        ],
        "requestBody": {
          "description": "Signal Request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RandomSignal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/RandomSignal"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
    "delete": {
      "tags": [
        "Signals Request"
      ],
      "summary": "Delete a Random Signal",
      "description": "Delete a Random Signal by name",
      
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "name": "signalname",
          "in": "path",
          "description": "The name that needs to be deleted",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "400": {
          "description": "Invalid name supplied"
        },
        "404": {
          "description": "Signal not found"
        }
      }
    }
  }
},
  "components": {
    "schemas": {
      "RandomSignal": {
        "properties": {
          "signalname": {
            "type": "string"
          },
          "lowerBoundary": {
            "type": "integer",
            "format": "int32"
          },
          "upperBoundary": {
            "type": "integer",
            "format": "int32"
          },
          "transmissionFrequency": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "SinusSignal": {
        "properties": {
          "signalname": {
            "type": "string"
          },
          "frequency": {
            "type": "number",
            "format": "float"
          },
          "amplitude": {
            "type": "number",
            "format": "float"
          },
          "transmissionFrequency": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "CosinusSignal": {
        "properties": {
          "signalname": {
            "type": "string"
          },
          "frequency": {
            "type": "number",
            "format": "float"
          },
          "amplitude": {
            "type": "number",
            "format": "float"
          },
          "transmissionFrequency": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "EmphasizedSignal": {
        "properties": {
          "signalname": {
            "type": "string"
          },
          "center": {
            "type": "number",
            "format": "float"
          },
          "scale": {
            "type": "number",
            "format": "float"
          },
          "transmissionFrequency": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "SpikedSignal": {
        "properties": {
          "signalname": {
            "type": "string"
          },
          "base": {
            "type": "float"
          },
          "distance": {
            "type": "number",
            "format": "float"
          },
          "probability": {
            "type": "number",
            "format": "float"
          },
          "size": {
            "type": "number",
            "format": "float"
          },
          "transmissionFrequency": {
            "type": "number",
            "format": "float"
          }
        }
      }
    }
  }
}